generator client {
  provider = "prisma-client-js"
  previewFeatures = ["metrics"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  password    String
  phoneNumber String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Table {
  id          String    @id @default(cuid())
  tableNumber Int       @unique
  matches     Match[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Match {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  tableId       String
  player1       String
  player2       String
  loginTime     DateTime
  logoutTime    DateTime?
  format        Format
  frames        Int?
  timeMinutes   Int?
  initialPrice  Float         @default(0)
  discount      Float?
  hasDiscount   Boolean       @default(false)
  finalPrice    Float?
  paymentMethod Payment       @default(CASH)
  paymentStatus PaymentStatus @default(PENDING)
  status        Status
  table         Table         @relation(fields: [tableId], references: [id])

  @@index([tableId])
}

model Expense {
  id          String       @id @default(uuid())
  description String
  tag         ExpenseTag
  quantity    Int
  rate        Float
  amount      Float
  date        DateTime     @default(now())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

enum Format {
  PER_MINUTE
  PER_FRAME
}

enum DueFees {
  PLAYER1
  PLAYER2
}

enum Payment {
  CASH
  ONLINE
  CREDIT
}

enum Status {
  ONGOING
  COMPLETED
  PENDING_PAYMENT
}

enum PaymentStatus {
  PENDING
  PAID
}

enum ExpenseTag {
  FOOD
  MAINTENANCE
  UTILITIES
  SALARY
  OTHER
} 